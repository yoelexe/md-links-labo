-> La función readdirSync lista los archivos de un directorio
y se ejecuta de forma síncrona.

-> La función readdir lista los archivos de un directorio y
se ejecuta de forma asíncrona.

/*
- TODO:https://barcelonageeks.com/node-js-metodo-path-join/
- OtherLink: https://codingpotions.com/nodejs-leer-archivos-forma-recursiva/

- https://www.w3big.com/es/nodejs/nodejs-path-module.html#gsc.tab=0

*/

-> process.argv
>  utiliza para pasar los argumentos al proceso node.js 
> cuando se ejecuta en la línea de comandos.

-> regex (http(|s)):\/\/(.*)\/(.*)
-> regex ^https?:\/\/[\w\-]+(\.[\w\-]+)+[/#?]?.*$

=> En términos simples: recursión es cuando una función sigue llamándose a sí misma, 
hasta que ya no tiene que hacerlo.

// const r = new RegExp('^(?:[a-z]+:)?//', 'i');
// const hola = process.argv[2].replace(/\\/g, '/');

// testeo
// r.test('//cdn.ejemplo.com/lib.js'); // true - URL absoluta, relativa al protocolo
// r.test('/directorio/prueba.txt'); // false - URL relativa
// console.log(r.test('test'))

console.log(path.isAbsolute('/contratacion/openxchange/'));
console.log(path.isAbsolute('https://contratacion/openxchange/'));
console.log(`ejemplo de ruta absoluta: ${__dirname}`)

=> https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_\+.~#?&//=]*)


// ? readdirSync
  // ? statsSync
  // qué es direct?
  // isDirectory

Función declarada -> la podemos invocar antes de que sea declarada, esto en JS se conoce como hoisting
Función expresada -> debe ser declarada antes de ser invocada